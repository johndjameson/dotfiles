" *************************************
"
"   Vimrc
"   -> User-defined Vim settings
"
" *************************************

if has('python3')
  silent! python3 1
endif

" -------------------------------------
"   Setup
" -------------------------------------

" Use Vim settings with no vi backward compatibility
set nocompatible

" -------------------------------------
"   Vundle
" -------------------------------------

source ~/.dotfiles/vim/plugins.vim

" -------------------------------------
"   Ack
" -------------------------------------

let g:ack_use_cword_for_empty_search = 1

if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" -------------------------------------
"   Airline
" -------------------------------------

if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline#extensions#branch#displayed_head_limit = 20
let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#right_alt_sep = ''
let g:airline#extensions#tabline#right_sep = ''
let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#show_close_button = 0
let g:airline#extensions#wordcount#enabled = 0
let g:airline_left_sep=''
let g:airline_powerline_fonts=0
let g:airline_right_sep=''
let g:airline_section_x = ''
let g:airline_section_y = airline#section#create_right(['filetype'])
let g:airline_section_z = ''
let g:airline_symbols.branch = '⎇ '
let g:airline_theme='solarized'

" -------------------------------------
"   ALE
" -------------------------------------

let g:airline#extensions#ale#enabled = 1
let g:ale_fix_on_save = 1
let g:ale_lint_on_enter = 0
let g:ale_sign_error = '●'
let g:ale_sign_warning = '.'

let g:ale_fixers = {
\ 'javascript': ['eslint'],
\}

let g:ale_linters = {
\ 'javascript': ['eslint'],
\}

" -------------------------------------
"   CtrlP
" -------------------------------------

let g:ctrlp_use_caching = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

" -------------------------------------
"   EasyMotion
" -------------------------------------

" Display targets in uppercase
let g:EasyMotion_use_upper = 1

" Remove x, z, and ; from default key set, set group key priority
let g:EasyMotion_keys = 'ASDHJKLQWERTYUIMNOCVBPGF'

" Overwrite default target colors
hi link EasyMotionTarget Special
hi link EasyMotionShade  Comment
hi link EasyMotionTarget2First Type
hi link EasyMotionTarget2Second Type

" -------------------------------------
"   Emmet
" -------------------------------------

let g:user_emmet_settings = {
\  'javascript.jsx' : {
\      'extends' : 'jsx',
\  },
\}

" -------------------------------------
"   Git Gutter
" -------------------------------------

let g:gitgutter_map_keys = 0

if exists('&signcolumn')
  set signcolumn=yes
else
  let g:gitgutter_sign_column_always = 1
endif

" -------------------------------------
"   JSX
" -------------------------------------

let g:jsx_ext_required = 0

" -------------------------------------
"   Markdown
" -------------------------------------

let g:vim_markdown_folding_disabled = 1

" -------------------------------------
"   NERD Commenter
" -------------------------------------

let g:NERDSpaceDelims = 1

" -------------------------------------
"   NERD Tree
" -------------------------------------

let g:NERDTreeMinimalUI = 1
let g:NERDTreeWinSize = 50

" -------------------------------------
"   Netrw
" -------------------------------------

let g:netrw_banner = 0
let g:netrw_list_hide='.DS_Store,\.\./,\./'
let g:netrw_liststyle = 0

" -------------------------------------
"   Prettier
" -------------------------------------

let g:prettier#config#single_quote = 'true'

" -------------------------------------
"   Solarized
" -------------------------------------

let g:solarized_termtrans = 1

" -------------------------------------
"   Visual Multi
" -------------------------------------

let g:VM_case_setting = 'smart'

" -------------------------------------
"   Editor
" -------------------------------------

" ----- General ----- "

set hidden

set clipboard=unnamed

set backspace=indent,eol,start

set formatoptions-=r

set autoindent
set smartindent
set smarttab

set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

set nobackup
set noswapfile
set nowritebackup

" ----- Color Scheme ----- "

syntax on
set t_Co=256
set background=dark
colorscheme solarized

" Solarized setup (via @drewbarontini)
hi! LineNR guibg=NONE ctermbg=NONE
hi FoldColumn ctermbg=NONE
hi SignColumn ctermbg=NONE

" ----- Text Area ----- "

set colorcolumn=80,100
set cursorline
set nowrap
set number
set scrolloff=4
set showmatch

" Reveal unwanted whitespace
set list
set listchars=tab:»·,trail:·

" ----- Interface ----- "

set laststatus=2
set noshowmode
set ruler
set showcmd
set visualbell

" ----- Search ----- "

set hlsearch
set ignorecase
set incsearch
set nohlsearch
set smartcase

" ----- Sessions ----- "

set sessionoptions-=options

" ----- Wildcard ----- "

set wildcharm=<tab>
set wildignore+=*.gif
set wildignore+=*.jpeg
set wildignore+=*.jpg
set wildignore+=*.log
set wildignore+=*.png
set wildignore+=*.psd
set wildignore+=*/cache/*
set wildignore+=*/dist/*
set wildignore+=*/log/*
set wildignore+=*/node_modules/*
set wildignore+=*/tmp/*
set wildmenu

" ----- Quick Escape ----- "

set noesckeys
set ttimeout
set ttimeoutlen=100

" ----- Events ----- "

if has('autocmd')
  autocmd bufwritepost *.vim source %
endif

" -------------------------------------
"   Filetypes
" -------------------------------------

autocmd Filetype markdown setlocal wrap
autocmd Filetype markdown setlocal linebreak
autocmd Filetype markdown setlocal nolist

autocmd BufNewFile,BufRead *.coffee.erb set filetype=coffee
autocmd BufNewFile,BufRead *.com set filetype=nginx
autocmd BufNewFile,BufRead *.conf set filetype=nginx
autocmd BufNewFile,BufRead *.haml.erb set filetype=haml
autocmd BufNewFile,BufRead *.md.erb set filetype=markdown
autocmd BufNewFile,BufRead *.mdx set filetype=markdown
autocmd BufNewFile,BufRead *.sass.erb set filetype=sass
autocmd BufNewFile,BufRead *.scss.liquid set filetype=scss
autocmd BufRead,BufNewFile *.thor set filetype=ruby

" -------------------------------------
"   Imports
" -------------------------------------

source ~/.dotfiles/vim/colors.vim
source ~/.dotfiles/vim/functions.vim
source ~/.dotfiles/vim/mappings.vim
