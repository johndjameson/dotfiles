snippet - "Hash Rocket" i
=> $1
endsnippet

snippet # "String Interpolation" i
#{ $1 }$0
endsnippet

snippet ? "Ternary Operator"
${1:condition} ? $2 : $3
endsnippet

snippet bp "binding.pry"
binding.pry
endsnippet

snippet class "Class Definition" b
class $1
	$0
end
endsnippet

snippet coh "Heading Comment"
# *************************************
#
#   ${1:Title}
#   -> ${2:Description}
#
# *************************************$0
endsnippet

snippet col "Long Comment"
# -------------------------------------
#   ${1:Title}
# -------------------------------------$0
endsnippet

snippet cos "Short Comment"
# ----- ${1:Title} ----- #$0
endsnippet

snippet def "Method Definition"
def ${1:method_name}
	${0:# ...}
end
endsnippet

snippet doc "Documentation Block"
# ${1:Description}
#
# == Parameters
#
# @param ${2:name} [${3:String}] ${4:description}
#
# == Usage
#
#   ${5}
#$0
endsnippet

snippet docp "Documentation Parameter" i
@param ${1:name} [${2:String}] ${3:description}
endsnippet

snippet each "Each Block"
${1:@variable}.each do |$2|
	${3:# ...}
end$0
endsnippet

snippet eachi "Each Block"
${1:@variable}.each { |$2| ${3:# ...} }
endsnippet

snippet ib "Inline Block" i
${1:map} { |$2| $3 }$0
endsnippet

snippet if "If Statement"
if ${1:condition}
	${2:# ...}
end$0
endsnippet

snippet ife "If/Else Statement"
if ${1:condition}
	${2:# ...}
else
	${3:# ...}
end$0
endsnippet

snippet md "Module"
module ${1:ModuleName}
	$0
end
endsnippet

snippet pv "Private"
private

$0
endsnippet

snippet rdoc "RDoc"
# ${1:Description}
#
# == Parameters
#
# * +${2:parameter}+ - ${3:description}
#
# == Usage
#
#   ${4:...}
#$0
endsnippet

snippet req "Require"
require '$1'$0
endsnippet

snippet task "Task"
desc '$1'
task :${2:task_name} do
	${3:# ...}
end$0
endsnippet

snippet un "Unless"
unless ${1:condition}
	${2:# ...}
end$0
endsnippet

snippet une "Unless/Else"
unless ${1:condition}
	${2:# ...}
else
	${3:# ...}
end$0
endsnippet
